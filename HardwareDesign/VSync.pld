GAL16V8
VSync

Clock NRST  VC0   VC1   VC2   VC3   VC4   VC5   VC6   GND
NOE   VC7   VC8   VC9   BEGIN END   HCEND NC    VSYNC VCC

; Sync pulse begins when HCOUNT_END (HCEND) is asserted
; and VCOUNT=489 (in base 2, 111101001)
BEGIN = NRST * HCEND * VC8 * VC7 * VC6 * VC5 * /VC4 * VC3 * /VC2 * /VC1 * VC0

; Sync pulse ends when HCOUNT_END (HCEND) is asserted
; and VCOUNT=491 (in base 2, 111101011)
END = NRST * HCEND * VC8 * VC7 * VC6 * VC5 * /VC4 * VC3 * /VC2 * VC1 * VC0

; Sync pulse is negative
; (which means that in reset we definitely want a high output).
; General idea:
;   - if /NRST is asserted, next VSYNC should be high
;   - if END is asserted, next VSYNC should be high
;   - if neither BEGIN nor END is asserted, next VSYNC value
;     should be the same as the current one
VSYNC.R =   /NRST
          + END
          + /BEGIN * /END * VSYNC

DESCRIPTION

VGA 640x480 vertical sync gen.
VC0..VC9 represent the vertical line count.
(Note that we don't actually need VC9, since the vsync
pulse events happen when VCOUNT < 512.)

; vim:ft=text:
