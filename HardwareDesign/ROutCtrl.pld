GAL22V10
ROutCtrl

Clock   NRST    VActive  HBActive  HEActive  VC0     VC1    VC2    VC3   RowBA12 VSync  GND
NC      Active  Count0   Count1    Phase     UpdRBCP nLdRDA IncRDA RDA12 NC      NC     VCC

; Active register.
; Next value should be high if
;   - not in reset, and HEActive not asserted, and VActive is asserted,
;     and currently active (maintain current value)
;   - not in reset, and HBActive is asserted, and VActive is asserted
;     (turn on when HBActive pulse is seen, and in we're ready to start
;     generating the visible part of the frame)
Active.R =   NRST * /HEActive * VActive * Active
           + NRST * HBActive * VActive

; Two-bit timing counter. In general, we'll increment the readout
; address when count is 1 (so initiate the pulse when count is 0),
; and commit data from VRAM (to the character register or attribute
; register) when count is 0 (so initiate the pulse when count is 3).

; Low counter bit.
; It just toggles when there is activity.
Count0.R = Active * /Count0

; High counter bit.
; Note that this is forced high when Active is not asserted,
; which means that the counter begins with Count=2.
; More generally, Count1 should transition to 1 if Count=01 or
; Count=10.
Count1.R =   /Active
           + Active * /Count1 * Count0
           + Active * Count1 * /Count0

; Phase bit.
; Phase=0 means we're fetching a character from VRAM,
; and Phase=1 means we're fetching an attribute from VRAM.
; This is essentially a 3rd counter bit, since each phase
; is 4 cycles long.
Phase.R =   Active * Count1 * Count0 * /Phase    ; Phase goes high if Count=11 and Phase=0
          + Active * /Count1 * Phase             ; Phase stays same if Count=0x
          + Active * /Count0 * Phase             ; Phase stays same if Count=x0

DESCRIPTION

Readout control logic.

The readout module has two registers:

  The readout address register (a.k.a. memory fetch address register),
  which is implemented as three 74ACT163 counters.

  The row begin address register, which is implemented as two
  74ACT273 registers.

Because VRAM addresses are 13 bits, and three 74ACT163 counters is
only 12 bits, this GAL maintains the thirteenth bit of the readout
address.

Inputs:

  Clock    - VGA 25.175MHz dot clock
  NRST     - active-low reset signal
  VActive  - active-high vertical activity signal
  HBActive - high if horizontal activity should begin
  HEActive - high if horizontal activity should end
  VC0..VC3 - least significant 4 bits of VCOUNT
  RowBA12  - current value of bit 12 of row begin address register
  VSync    - vertical sync signal (clears row begin address register bits
               when low)

Outputs:

  Active   - true during activity
  Count0   - low bit of 2-bit counter used for control signal generation
  Count1   - high bit of 2-bit counter used for control signal generation
  Phase    - which 4 cycle phase is active (phase 0 reads a character
               from VRAM, phase 1 reads an attribute from VRAM)
  UpdRBCP  - update row begin address clock pulse: used to set the row
               begin address to the current readout address (happens
               after each full character row is rendered, in order to
               advance to the next row of characters)
  nLdRDA   - a low value indicates that a value should be loaded into
               the readout address register from the row begin address
               register; done before rendering each row of pixels
  IncRDA   - a high value indicates that the readout address should be
               incremented
  RDA12    - thirteenth bit (A12) of the readout address

vim:ft=text:
