GAL22V10
VCntCtrl

VC0   VC1    VC2      VC3      VC4     VC5   VC6   VC7   VC8   VC9   HCEND GND
NC    VCEND NVCCLR PulseBeg PulseEnd VVisEnd NC    NC    NC    NC    NC    VCC

; VCCOUNT_END asserted when VCOUNT=524 (binary 1000001100)
VCEND    = VC9 * /VC8 * /VC7 * /VC6 * /VC5 * /VC4 * VC3 * VC2 * /VC1 * /VC0

; Clear counters when (HCOUNT_END & VCOUNT_END)
;
; Note that on reset, counters are parallel-loaded with the
; initial VCOUNT (which will be in the back porch
; part of the frame, to allow for the rasterization
; hardware to get read for the first line of pixels in the
; initial frame.) The counters only need to be *cleared*
; at the end of a frame.
/NVCCLR  = HCEND * VCEND

; VSync pulse begins when HCEND asserted and VCOUNT=489 (binary 111101001)
PulseBeg = HCEND * VC8 * VC7 * VC6 * VC5 * /VC4 * VC3 * /VC2 * /VC1 * VC0

; VSync pulse ends when HCEND asserted and VCOUNT=491 (binary 111101011)
PulseEnd = HCEND * VC8 * VC7 * VC6 * VC5 * /VC4 * VC3 * /VC2 * VC1 * VC0

; Vertical visible region ends when VCOUNT=479 (binary 111011111)
VVisEnd = VC8 * VC7 * VC6 * /VC5 * VC4 * VC3 * VC2 * VC1 * VC0

DESCRIPTION

Control logic for VCount module. Note that this is entirely
combinational logic.

Pin functions:

VC0..VC9  current VCOUNT
HCEND     input HCOUNT_END signal, from HCount module
VCEND     generated active-high VCOUNT_END signal
            (when HCOUNT_END & VCOUNT=524)
NVCCLR    generated active-low clear signal to counters
            (on reset or HCOUNT_END & VCOUNT_END)
PulseBeg  generated active-high signal telling VSync module
            to begin the VSync pulse
PulseEnd  generated active-high signal telling VSync module
            to end the VSync pulse
VVisEnd   generated active-high signal indicating when the end of
            vertical visible region is reached (VCOUNT=479)

; vim:ft=text:
